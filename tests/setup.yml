---

- name: launch docker containers
  hosts: containers
  gather_facts: false
  tasks:
    - name: set flag whether to restart docker container
      set_fact:
        restart: "{{ provision_docker_restart | default(false) }}"
    - import_role:
        name: chrismeyersfsu.provision_docker
      vars:
        provision_docker_inventory_group:
          - "{{ inventory_hostname }}"
      delegate_to: localhost

- name: check and install python on ubuntu/debian containers
  hosts: ubuntu:debian:&containers
  gather_facts: false
  tasks:
    - name: check for and install python
      raw: >-
        test -e /usr/bin/python ||
        test -e /usr/bin/python3 ||
        (apt-get -y update && apt-get install -y {{ python_minimal_package | default('python-minimal') }})
      register: _check_python_result
      changed_when: _check_python_result.stdout
    - name: install ca certificates
      apt:
        name: ca-certificates

- name: check and install python3 on archlinux container
  hosts: arch:&containers
  gather_facts: false
  tasks:
    - name: check for and install python3
      raw: >-
        test -e /usr/bin/python3 ||
        (/usr/bin/pacman --noconfirm -Sy archlinux-keyring && /usr/bin/pacman -S --noconfirm python3)
      register: _check_python_result
      changed_when: _check_python_result.stdout
    - name: install ssh client
      pacman:
        name: openssh

- name: install user/group utils on amazon container
  hosts: amazon:&containers
  gather_facts: false
  tasks:
    - name: install shadow utils
      yum:
        name: shadow-utils

- name: install and configure sudo on containers
  hosts: containers
  tasks:
    - name: install sudo
      package:
        name: sudo
    - name: enable sudo with no password
      copy:
        content: >-
          %{{ (ansible_os_family == 'Debian') | ternary('sudo', 'wheel') }}
          ALL=(ALL) NOPASSWD: ALL
        dest: /etc/sudoers.d/sudo_nopasswd
        mode: 0440
        owner: root
        group: root
